#!/usr/bin/python

# very simple fast flux domain checker

from time import sleep
import socket
import argparse
import sys

def do_task():
				sleep(0.1)

def sleeper(n):
				steps = n/10
				for i in range(n):
								do_task()
								if i%steps == 0:
												print '\b.',
												sys.stdout.flush()
				print '\b]  Second Check',


def domain_check(arg_domain, arg_timeout):
				print "\nDomain: " + arg_domain
				print "Timeout: " + str(arg_timeout) + "secs"
				a = socket.gethostbyname(arg_domain)

				print 'First check [          ]',
				print '\b'*12,
				sys.stdout.flush()
				sleeper(arg_timeout*10)
				b = socket.gethostbyname(arg_domain)
				print "\n\nFirst check: " + a
				print "Second check: " + b
				if a != b:
								print "\n*** Possible fast flux..IP addresses have changed ***"
				else:
								print("\nWe're good here")


def menu():

				# menu system
				parser = argparse.ArgumentParser(description='simple fast-flux domain checker', usage='%(prog)s -d domain -t timeout')
				parser.add_argument('--domain', '-d', dest='domain', help='domain to check')
				parser.add_argument('--timeout', '-t', dest='timeout', help='timeout to use')
				parser.add_argument('--count', '-c', dest='count', help='times to check')
				parser.add_argument('--version', '-v', action='version', version='%(prog)s 0.1')
				args = parser.parse_args()
				
				if len(sys.argv) == 1:
								parser.print_help()
								sys.exit(1)

				arg_domain = args.domain
				arg_timeout = int(args.timeout)
				arg_count = int(args.count)

				if not args.domain:
								parser.print_help()
								sys.exit(1)

				x = 0
				while x < arg_count:
								domain_check(arg_domain, arg_timeout)
								x = x + 1

if __name__ == '__main__':
    menu()
